@inject ISecurityTokenClient TokenClient
@inject NavigationManager Navigator
@rendermode InteractiveWebAssembly

@code {
    private bool _hasRun = false;

    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    [Parameter]
    public RenderFragment<Func<Task>>? ChildContent { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_hasRun && firstRender)
        {
            _hasRun = true;
            var result = await TokenClient.AcquireAndStoreTokenAsync();
            Navigator.NavigateTo(ReturnUrl ?? "/", new Dictionary<string, object?>
            {
                ["returnUrl"] = ReturnUrl
            });
        }
    }
}